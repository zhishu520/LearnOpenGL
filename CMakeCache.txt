# This is the CMakeCache file.
# For build in directory: /Users/zhijianzhang/opengl
# It was generated by CMake: /usr/local/Cellar/cmake/3.4.0/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Android JNI IOSystem support is active
ASSIMP_ANDROID_JNIIOSYSTEM:BOOL=OFF

//Path the tool executables are installed to.
ASSIMP_BIN_INSTALL_DIR:STRING=bin

//build the 3DS importer
ASSIMP_BUILD_3DS_IMPORTER:BOOL=ON

//build the 3D importer
ASSIMP_BUILD_3D_IMPORTER:BOOL=ON

//build the 3MF importer
ASSIMP_BUILD_3MF_IMPORTER:BOOL=ON

//build the AC importer
ASSIMP_BUILD_AC_IMPORTER:BOOL=ON

//build the AMF importer
ASSIMP_BUILD_AMF_IMPORTER:BOOL=ON

//describe the current architecture.
ASSIMP_BUILD_ARCHITECTURE:STRING=

//build the ASE importer
ASSIMP_BUILD_ASE_IMPORTER:BOOL=ON

//build the ASSBIN importer
ASSIMP_BUILD_ASSBIN_IMPORTER:BOOL=ON

//If the supplementary tools for Assimp are built in addition to
// the library.
ASSIMP_BUILD_ASSIMP_TOOLS:BOOL=OFF

//build the ASSXML importer
ASSIMP_BUILD_ASSXML_IMPORTER:BOOL=ON

//build the B3D importer
ASSIMP_BUILD_B3D_IMPORTER:BOOL=ON

//build the BLEND importer
ASSIMP_BUILD_BLEND_IMPORTER:BOOL=ON

//build the BVH importer
ASSIMP_BUILD_BVH_IMPORTER:BOOL=ON

//build the COB importer
ASSIMP_BUILD_COB_IMPORTER:BOOL=ON

//build the COLLADA importer
ASSIMP_BUILD_COLLADA_IMPORTER:BOOL=ON

//describe the current compiler.
ASSIMP_BUILD_COMPILER:STRING=

//build the CSM importer
ASSIMP_BUILD_CSM_IMPORTER:BOOL=ON

//build the DXF importer
ASSIMP_BUILD_DXF_IMPORTER:BOOL=ON

//build the FBX importer
ASSIMP_BUILD_FBX_IMPORTER:BOOL=ON

//build the GLTF importer
ASSIMP_BUILD_GLTF_IMPORTER:BOOL=ON

//build the HMP importer
ASSIMP_BUILD_HMP_IMPORTER:BOOL=ON

//build the IFC importer
ASSIMP_BUILD_IFC_IMPORTER:BOOL=ON

//build the IRRMESH importer
ASSIMP_BUILD_IRRMESH_IMPORTER:BOOL=ON

//build the IRR importer
ASSIMP_BUILD_IRR_IMPORTER:BOOL=ON

//build the LWO importer
ASSIMP_BUILD_LWO_IMPORTER:BOOL=ON

//build the LWS importer
ASSIMP_BUILD_LWS_IMPORTER:BOOL=ON

//build the MD2 importer
ASSIMP_BUILD_MD2_IMPORTER:BOOL=ON

//build the MD3 importer
ASSIMP_BUILD_MD3_IMPORTER:BOOL=ON

//build the MD5 importer
ASSIMP_BUILD_MD5_IMPORTER:BOOL=ON

//build the MDC importer
ASSIMP_BUILD_MDC_IMPORTER:BOOL=ON

//build the MDL importer
ASSIMP_BUILD_MDL_IMPORTER:BOOL=ON

//build the MS3D importer
ASSIMP_BUILD_MS3D_IMPORTER:BOOL=ON

//build the NDO importer
ASSIMP_BUILD_NDO_IMPORTER:BOOL=ON

//build the NFF importer
ASSIMP_BUILD_NFF_IMPORTER:BOOL=ON

//Build the C4D importer, which relies on the non-free Melange
// SDK.
ASSIMP_BUILD_NONFREE_C4D_IMPORTER:BOOL=OFF

//build the OBJ importer
ASSIMP_BUILD_OBJ_IMPORTER:BOOL=ON

//build the OFF importer
ASSIMP_BUILD_OFF_IMPORTER:BOOL=ON

//build the OGRE importer
ASSIMP_BUILD_OGRE_IMPORTER:BOOL=ON

//build the OPENGEX importer
ASSIMP_BUILD_OPENGEX_IMPORTER:BOOL=ON

//build the PLY importer
ASSIMP_BUILD_PLY_IMPORTER:BOOL=ON

//build the Q3BSP importer
ASSIMP_BUILD_Q3BSP_IMPORTER:BOOL=ON

//build the Q3D importer
ASSIMP_BUILD_Q3D_IMPORTER:BOOL=ON

//build the RAW importer
ASSIMP_BUILD_RAW_IMPORTER:BOOL=ON

//If the official samples are built as well (needs Glut).
ASSIMP_BUILD_SAMPLES:BOOL=OFF

//build the SIB importer
ASSIMP_BUILD_SIB_IMPORTER:BOOL=ON

//build the SMD importer
ASSIMP_BUILD_SMD_IMPORTER:BOOL=ON

//build the STL importer
ASSIMP_BUILD_STL_IMPORTER:BOOL=ON

//build the TERRAGEN importer
ASSIMP_BUILD_TERRAGEN_IMPORTER:BOOL=ON

//If the test suite for Assimp is built in addition to the library.
ASSIMP_BUILD_TESTS:BOOL=OFF

//build the X3D importer
ASSIMP_BUILD_X3D_IMPORTER:BOOL=ON

//build the XGL importer
ASSIMP_BUILD_XGL_IMPORTER:BOOL=ON

//build the X importer
ASSIMP_BUILD_X_IMPORTER:BOOL=ON

//Build your own zlib
ASSIMP_BUILD_ZLIB:BOOL=OFF

//Ea≈Ñable this to measure test coverage.
ASSIMP_COVERALLS:BOOL=OFF

//Set to ON to enable double precision processing
ASSIMP_DOUBLE_PRECISION:BOOL=OFF

//Path the header files are installed to.
ASSIMP_INCLUDE_INSTALL_DIR:STRING=include

//Suffix to append to library names
ASSIMP_LIBRARY_SUFFIX:STRING=

//Path the built library files are installed to.
ASSIMP_LIB_INSTALL_DIR:STRING=lib

//Disable Assimp's export functionality.
ASSIMP_NO_EXPORT:BOOL=OFF

//Set to ON to generate CPack configuration files and packaging
// targets
ASSIMP_OPT_BUILD_PACKAGES:BOOL=OFF

//the package-specific version used for uploading the sources
ASSIMP_PACKAGE_VERSION:STRING=0

//Value Computed by CMake
Assimp_BINARY_DIR:STATIC=/Users/zhijianzhang/opengl/Glitter/Vendor/assimp

//Value Computed by CMake
Assimp_SOURCE_DIR:STATIC=/Users/zhijianzhang/opengl/Glitter/Vendor/assimp

//Set when you want to build the Bullet 2 demos
BUILD_BULLET2_DEMOS:BOOL=OFF

//Set when you want to build Bullet 3
BUILD_BULLET3:BOOL=ON

//Set when you want to build apps with enet TCP networking support
BUILD_CLSOCKET:BOOL=ON

//Build original Bullet CPU examples
BUILD_CPU_DEMOS:BOOL=OFF

//Set when you want to build apps with enet UDP networking support
BUILD_ENET:BOOL=ON

//Set when you want to build the extras
BUILD_EXTRAS:BOOL=OFF

//Set when you want to build the OpenGL3+ demos
BUILD_OPENGL3_DEMOS:BOOL=OFF

//Set when you want to build pybullet (Python bindings for Bullet)
BUILD_PYBULLET:BOOL=OFF

//Use shared libraries
BUILD_SHARED_LIBS:BOOL=OFF

//Build Unit Tests
BUILD_UNIT_TESTS:BOOL=OFF

//Build Bullet 2 libraries with mutex locking around certain operations
// (required for multi-threading)
BULLET2_USE_THREAD_LOCKS:BOOL=OFF

//Value Computed by CMake
BULLET_PHYSICS_BINARY_DIR:STATIC=/Users/zhijianzhang/opengl/Glitter/Vendor/bullet

//Value Computed by CMake
BULLET_PHYSICS_SOURCE_DIR:STATIC=/Users/zhijianzhang/opengl/Glitter/Vendor/bullet

//Dependencies for target
Bullet2FileLoader_LIB_DEPENDS:STATIC=

//Dependencies for target
Bullet3Collision_LIB_DEPENDS:STATIC=

//Dependencies for target
Bullet3Common_LIB_DEPENDS:STATIC=

//Dependencies for target
Bullet3Dynamics_LIB_DEPENDS:STATIC=

//Dependencies for target
Bullet3Geometry_LIB_DEPENDS:STATIC=

//Dependencies for target
Bullet3OpenCL_clew_LIB_DEPENDS:STATIC=

//Dependencies for target
BulletCollision_LIB_DEPENDS:STATIC=

//Dependencies for target
BulletDynamics_LIB_DEPENDS:STATIC=

//Dependencies for target
BulletInverseDynamics_LIB_DEPENDS:STATIC=

//Dependencies for target
BulletSoftBody_LIB_DEPENDS:STATIC=

//For backwards compatibility, what version of CMake commands and
// syntax should this version of CMake try to support.
CMAKE_BACKWARDS_COMPATIBILITY:STRING=2.4

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Debug Postfix for lib, samples and tools
CMAKE_DEBUG_POSTFIX:STRING=

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:STRING=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Glitter

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a library.
COCOA_LIBRARY:FILEPATH=/System/Library/Frameworks/Cocoa.framework

//Single output directory for building all executables.
EXECUTABLE_OUTPUT_PATH:PATH=

//Value Computed by CMake
GLFW_BINARY_DIR:STATIC=/Users/zhijianzhang/opengl/Glitter/Vendor/glfw

//Build the GLFW documentation
GLFW_BUILD_DOCS:BOOL=OFF

//Build the GLFW example programs
GLFW_BUILD_EXAMPLES:BOOL=OFF

//Build the GLFW test programs
GLFW_BUILD_TESTS:BOOL=OFF

//Include internals in documentation
GLFW_DOCUMENT_INTERNALS:BOOL=OFF

//Generate installation target
GLFW_INSTALL:BOOL=ON

//Value Computed by CMake
GLFW_SOURCE_DIR:STATIC=/Users/zhijianzhang/opengl/Glitter/Vendor/glfw

//Use OSMesa for offscreen context creation
GLFW_USE_OSMESA:BOOL=OFF

//Use the Vulkan loader statically linked into application
GLFW_VULKAN_STATIC:BOOL=OFF

//Value Computed by CMake
Glitter_BINARY_DIR:STATIC=/Users/zhijianzhang/opengl

//Value Computed by CMake
Glitter_SOURCE_DIR:STATIC=/Users/zhijianzhang/opengl

//The subdirectory to the header prefix
INCLUDE_INSTALL_DIR:PATH=include/bullet

//Install generated CMake files
INSTALL_CMAKE_FILES:BOOL=ON

//Set when you want to install libraries
INSTALL_LIBS:BOOL=ON

//Internal update serialization structures
INTERNAL_UPDATE_SERIALIZATION_STRUCTURES:BOOL=OFF

//Single output directory for building all libraries.
LIBRARY_OUTPUT_PATH:PATH=

//Library directory name
LIB_DESTINATION:STRING=lib

//Takes an empty string or 64. Directory where lib will be installed:
// lib or lib64
LIB_SUFFIX:STRING=

//Dependencies for target
LinearMath_LIB_DEPENDS:STATIC=

//Include for OpenGL on OSX
OPENGL_INCLUDE_DIR:PATH=/System/Library/Frameworks/OpenGL.framework

//OpenGL lib for OSX
OPENGL_gl_LIBRARY:FILEPATH=/System/Library/Frameworks/OpenGL.framework

//AGL lib for OSX
OPENGL_glu_LIBRARY:FILEPATH=/System/Library/Frameworks/AGL.framework

//Base directory for pkgconfig files
PKGCONFIG_INSTALL_PREFIX:STRING=lib/pkgconfig/

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/local/bin/pkg-config

//Path to a library.
RT_LIBRARY:FILEPATH=RT_LIBRARY-NOTFOUND

//Use custom vectormath library
USE_CUSTOM_VECTOR_MATH:BOOL=OFF

//Use double precision
USE_DOUBLE_PRECISION:BOOL=OFF

//Use Glut
USE_GLUT:BOOL=ON

//Use Graphical Benchmark
USE_GRAPHICAL_BENCHMARK:BOOL=ON

//Use MSVC Incremental Linking
USE_MSVC_INCREMENTAL_LINKING:BOOL=OFF

//Use MSVC Runtime Library DLL (/MD or /MDd)
USE_MSVC_RUNTIME_LIBRARY_DLL:BOOL=OFF

//Use btSoftMultiBodyDynamicsWorld
USE_SOFT_BODY_MULTI_BODY_DYNAMICS_WORLD:BOOL=OFF

//Path to a file.
VULKAN_INCLUDE_DIR:PATH=VULKAN_INCLUDE_DIR-NOTFOUND

//Path to a library.
VULKAN_LIBRARY:FILEPATH=VULKAN_LIBRARY-NOTFOUND

//Path to a library.
VULKAN_STATIC_LIBRARY:FILEPATH=VULKAN_STATIC_LIBRARY-NOTFOUND

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=/usr/include

//Path to a library.
ZLIB_LIBRARY_DBG:FILEPATH=/usr/lib/libz.dylib

//Path to a library.
ZLIB_LIBRARY_REL:FILEPATH=/usr/lib/libz.dylib

//Dependencies for the target
assimp_LIB_DEPENDS:STATIC=optimized;/usr/lib/libz.dylib;debug;/usr/lib/libz.dylib;

//Dependencies for target
glfw_LIB_DEPENDS:STATIC=


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: ASSIMP_BUILD_ARCHITECTURE
ASSIMP_BUILD_ARCHITECTURE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ASSIMP_BUILD_COMPILER
ASSIMP_BUILD_COMPILER-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/zhijianzhang/opengl
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=4
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.4.0/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.4.0/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.4.0/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/usr/local/Cellar/cmake/3.4.0/bin/ccmake
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have symbol pthread_create
CMAKE_HAVE_LIBC_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/zhijianzhang/opengl
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=18
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/Cellar/cmake/3.4.0/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding OpenGL
FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/System/Library/Frameworks/OpenGL.framework][/System/Library/Frameworks/OpenGL.framework][v()]
//Details about finding PkgConfig
FIND_PACKAGE_MESSAGE_DETAILS_PkgConfig:INTERNAL=[/usr/local/bin/pkg-config][v0.28()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: OPENGL_INCLUDE_DIR
OPENGL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENGL_gl_LIBRARY
OPENGL_gl_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENGL_glu_LIBRARY
OPENGL_glu_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: RT_LIBRARY
RT_LIBRARY-ADVANCED:INTERNAL=1
UNZIP_CFLAGS:INTERNAL=
UNZIP_CFLAGS_I:INTERNAL=
UNZIP_CFLAGS_OTHER:INTERNAL=
UNZIP_FOUND:INTERNAL=
UNZIP_INCLUDEDIR:INTERNAL=
UNZIP_LIBDIR:INTERNAL=
UNZIP_LIBS:INTERNAL=
UNZIP_LIBS_L:INTERNAL=
UNZIP_LIBS_OTHER:INTERNAL=
UNZIP_LIBS_PATHS:INTERNAL=
UNZIP_PREFIX:INTERNAL=
UNZIP_STATIC_CFLAGS:INTERNAL=
UNZIP_STATIC_CFLAGS_I:INTERNAL=
UNZIP_STATIC_CFLAGS_OTHER:INTERNAL=
UNZIP_STATIC_LIBDIR:INTERNAL=
UNZIP_STATIC_LIBS:INTERNAL=
UNZIP_STATIC_LIBS_L:INTERNAL=
UNZIP_STATIC_LIBS_OTHER:INTERNAL=
UNZIP_STATIC_LIBS_PATHS:INTERNAL=
UNZIP_VERSION:INTERNAL=
UNZIP_minizip_INCLUDEDIR:INTERNAL=
UNZIP_minizip_LIBDIR:INTERNAL=
UNZIP_minizip_PREFIX:INTERNAL=
UNZIP_minizip_VERSION:INTERNAL=
//ADVANCED property for variable: VULKAN_INCLUDE_DIR
VULKAN_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: VULKAN_LIBRARY
VULKAN_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: VULKAN_STATIC_LIBRARY
VULKAN_STATIC_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DBG
ZLIB_LIBRARY_DBG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_REL
ZLIB_LIBRARY_REL-ADVANCED:INTERNAL=1
ZLIB_PKGC_CFLAGS:INTERNAL=
ZLIB_PKGC_CFLAGS_I:INTERNAL=
ZLIB_PKGC_CFLAGS_OTHER:INTERNAL=
ZLIB_PKGC_FOUND:INTERNAL=
ZLIB_PKGC_INCLUDEDIR:INTERNAL=
ZLIB_PKGC_LIBDIR:INTERNAL=
ZLIB_PKGC_LIBS:INTERNAL=
ZLIB_PKGC_LIBS_L:INTERNAL=
ZLIB_PKGC_LIBS_OTHER:INTERNAL=
ZLIB_PKGC_LIBS_PATHS:INTERNAL=
ZLIB_PKGC_PREFIX:INTERNAL=
ZLIB_PKGC_STATIC_CFLAGS:INTERNAL=
ZLIB_PKGC_STATIC_CFLAGS_I:INTERNAL=
ZLIB_PKGC_STATIC_CFLAGS_OTHER:INTERNAL=
ZLIB_PKGC_STATIC_LIBDIR:INTERNAL=
ZLIB_PKGC_STATIC_LIBS:INTERNAL=
ZLIB_PKGC_STATIC_LIBS_L:INTERNAL=
ZLIB_PKGC_STATIC_LIBS_OTHER:INTERNAL=
ZLIB_PKGC_STATIC_LIBS_PATHS:INTERNAL=
ZLIB_PKGC_VERSION:INTERNAL=
ZLIB_PKGC_zzip-zlib-config_INCLUDEDIR:INTERNAL=
ZLIB_PKGC_zzip-zlib-config_LIBDIR:INTERNAL=
ZLIB_PKGC_zzip-zlib-config_PREFIX:INTERNAL=
ZLIB_PKGC_zzip-zlib-config_VERSION:INTERNAL=
//x
ZLIB_PREFIX_PATH_INT_CHECK:INTERNAL=
__pkg_config_checked_UNZIP:INTERNAL=1
__pkg_config_checked_ZLIB_PKGC:INTERNAL=1

